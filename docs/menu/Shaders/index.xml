<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación visual</title><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/</link><description>Recent content on Computación visual</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/1._Coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/1._Coloring/</guid><description>Coloring # En este ejemplo se recrea la interpolación de colores, realizada previamente por software
Al oprimir la tecla &amp;ldquo;c&amp;rdquo; los colores alternaran entre RGB y CMY Al oprimir la tecla &amp;ldquo;r&amp;rdquo;, se generarán vectores aleatorios para construir poligonos diferentes " Como ejercicio adicional, se construyó un poligono de cuatro vertices para mostrar la interpolación de 4 colores (Cyan-Magenta-Yellow-Key).</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/2._Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/2._Texturing/</guid><description>Texturing # Para los ejercicios de texturing, recreamos los ejercicios iniciales reemplazando el canal de color rojo en la interpolación, por el canal de color Azul.
" " Adicionalmente, se implementó el filtro de screen space con una figura diferente, usando en esta ocasión un circulo</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/3._Image_Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/3._Image_Processing/</guid><description>Image Procesing # En webgl (es decir, GLSL ES) la texturización se utiliza para implementar el procesamiento de imágenes.
Para dibujar imágenes en WebGL necesitamos utilizar texturas. De manera similar a la forma en que WebGL espera coordenadas de espacio de recorte cuando renderiza en lugar de píxeles, WebGL espera coordenadas de textura cuando lee una textura. Las coordenadas de la textura van de 0.0 a 1.0 sin importar las dimensiones de la textura.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/4._Procedural_Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/4._Procedural_Texturing/</guid><description>Procedural Texturing # Para este ejercicio se generó una textura que replicara la cuadricula de Hermann sobre un cubo 3D.
La textura creada puede modificarse de la siguiente manera:
Al oprimir la flecha izquierda, disminuirá la cantidad de cuadros negros en cada cara del cubo Al oprimir la flecha derecha, aumentará la cantidad de cuadros negros en cada cara del cubo Al oprimir la tecla &amp;ldquo;b&amp;rdquo; se aplicará un efecto de difuminación sobre la textura "</description></item></channel></rss>