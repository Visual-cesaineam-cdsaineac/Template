<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Computación visual</title><link>https://visual-cesaineam-cdsaineac.github.io/Template/</link><description>Recent content in Introduction on Computación visual</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://visual-cesaineam-cdsaineac.github.io/Template/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/ilusiones/cuadricula/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/ilusiones/cuadricula/</guid><description>Definición. # Una ilusión de cuadrícula es cualquier tipo de cuadrícula que engaña la visión de una persona. Los dos tipos más comunes de ilusiones de rejilla son la ilusión de rejilla de Hermann y la ilusión de rejilla centelleante.
Ilusiones como éstas, demuestran la forma en que los ojos y el cerebro trabajan juntos en la creación de la percepción. Las ilusiones también pueden ayudarnos a darnos cuenta de que nuestras propias percepciones pueden ser limitadas o diferentes de las de otra persona que ve lo mismo.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/ilusiones/distorsi%C3%B3n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/ilusiones/distorsi%C3%B3n/</guid><description>Ilusión de la pared de la cafetería # La ilusión de la pared de la cafetería muestra un muro con mosaicos blancos y negros que parecen estar inclinándose.
Sin embargo, el efecto de esta ilusión óptico-geométrica podría entenderse al considerar que entre los azulejos blancos y negros hay unas líneas divisorias que son las responsables de generar el engaño o confusión.
Esta ilusión es algo antigua, pues, data del año 1898 y, originalmente, recibió el nombre de ilusión de la guardería.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/integrantes/Cristian_David_Sainea_Cespedes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/integrantes/Cristian_David_Sainea_Cespedes/</guid><description>Mi nombre es Cristian David Sainea Cespedes, tengo 23 años y actualmente soy estudiante de Ingeniería de Sistemas y Computación en la Universidad Nacional De Colombia. Tengo conocimientos en Python, SQL, HTML, CSS, Javascript, DAX, Excel avanzado, e Inglés
En cuanto a lo laboral, en este momento me desempeño como Data Analyst en la compañia Teleperformance S.A. desde Julio de 2021, cargo en el cual soy responsable de realizar mantenimiento, anàlisis y limpieza de datos para las áreas transversales de la compañia y apoyar la toma de decisiones empresariales.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/integrantes/Cristian_Esteban_Sainea_Martinez/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/integrantes/Cristian_Esteban_Sainea_Martinez/</guid><description>Mi nombre es Cristian Esteban Sainea Martinez, tengo 23 años y soy estudiante de ultimo semestre del pregrado de Ingenieria de Sistemas y Computación de la Universidad Nacional de Colombia. He trabajado en un proyecto de la Universidad Nacional llamado HORUS, alli trabajé como desarrollador Frontend. Actualmente me encuentro haciendo mi pasantia en la aseguradora Axa Colpatria y alli desempeño un cargo como ingeniero de datos.
Me gusta ser bastante profesional en todo lo que hago, respeto mis ideales profesionales y eticos.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/rasterizacion/1._Bresenham/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/rasterizacion/1._Bresenham/</guid><description>Jack Elton Bresenham. # Jack Elton Bresenham (nacido 11 de octubre de 1937, Clovis, Nuevo México, EE.UU.) es un exprofesor estadounidense de ciencias de la computación.
Se jubiló tras 27 años de servicio en IBM como miembro del personal técnico superior en 1987. Fue profesor durante 16 años en la Universidad de Winthrop y tiene nueve patentes.
Algoritmo del punto medio - Algoritmo de Bresenham # Determina qué puntos de una trama bidimensional deben trazarse para formar una línea recta entre dos puntos dados, y se utiliza habitualmente para dibujar líneas en la pantalla del ordenador.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/rasterizacion/2._Xiaolin_Wu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/rasterizacion/2._Xiaolin_Wu/</guid><description>Xiaolin Wu. # Actualmente es profesor en el Departamento de Ingeniería Eléctrica e Informática de la Universidad McMaster. Sus intereses de investigación incluyen procesamiento de imágenes, compresión de datos, multimedia digital, visión de bajo nivel y comunicación visual consciente de la red. Ha publicado más de 350 trabajos de investigación y posee cuatro patentes en estos campos.
Antialiasing. # Es una técnica que tiene como objetivo reducir las distorsiones y artefactos gráficos que aparecen en una imagen de alta resolución cuando esta se presenta a una resolución menor y viceversa.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/rasterizacion/3._Interpolaci%C3%B3n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/rasterizacion/3._Interpolaci%C3%B3n/</guid><description>Interpolación. # Se denomina interpolación a obtención de nuevos puntos partiendo del conocimiento de un conjunto de puntos. Como ejemplo simple, si tomara 15 minutos caminar 1 milla el lunes y 1 hora caminar 4 millas el martes, podríamos estimar razonablemente que tomaría 30 minutos caminar 2 millas.
Dentro del área de la computación gráfica, por medio de las coordenadas baricéntricas es posible llegar a interpolar caracteristicas importantes de los puntos que conforman un triangulo.</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/1._Coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/1._Coloring/</guid><description>Coloring # En este ejemplo se recrea la interpolación de colores, realizada previamente por software
Al oprimir la tecla &amp;ldquo;c&amp;rdquo; los colores alternaran entre RGB y CMY Al oprimir la tecla &amp;ldquo;r&amp;rdquo;, se generarán vectores aleatorios para construir poligonos diferentes " Como ejercicio adicional, se construyó un poligono de cuatro vertices para mostrar la interpolación de 4 colores (Cyan-Magenta-Yellow-Key).</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/2._Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/2._Texturing/</guid><description>Texturing # Para los ejercicios de texturing, recreamos los ejercicios iniciales reemplazando el canal de color rojo en la interpolación, por el canal de color Azul.
" " Adicionalmente, se implementó el filtro de screen space con una figura diferente, usando en esta ocasión un circulo</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/3._Image_Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/3._Image_Processing/</guid><description>Image Processing # Para el procesamiento de imagenes, implementamos un shader que simula la vision nocturna a través de una Lupa, adicionalmente usa las herramientas de brillo de HSV, HSL y Luma.
La implementación se realizó tanto para una imagen, como para un video
Al oprimir el número &amp;ldquo;1&amp;rdquo; se aplica la herramienta de color luma Al oprimir el número &amp;ldquo;2&amp;rdquo; se aplica la herramienta de color HSV Al oprimir el número &amp;ldquo;3&amp;rdquo; se aplica la herramienta de color HSL El efecto de lupa, cambio de color y herramienta de brillo se aplica a la región circular que tiene como centro la posición del mouse El selector en la parte superior cambiará el recurso de entrada, ya sea la imagen o el video "</description></item><item><title/><link>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/4._Procedural_Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-cesaineam-cdsaineac.github.io/Template/docs/menu/Shaders/4._Procedural_Texturing/</guid><description>Procedural Texturing # Para este ejercicio se generó una textura que replicara la cuadricula de Hermann sobre un cubo 3D.
La textura creada puede modificarse de la siguiente manera:
Al oprimir la flecha izquierda, disminuirá la cantidad de cuadros negros en cada cara del cubo Al oprimir la flecha derecha, aumentará la cantidad de cuadros negros en cada cara del cubo Al oprimir la tecla &amp;ldquo;b&amp;rdquo; se aplicará un efecto de difuminación sobre la textura "</description></item></channel></rss>